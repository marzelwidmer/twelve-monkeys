<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.keepcalm.web</groupId>
	<artifactId>twelve-monkeys</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>twelve-monkeys</name>
	<description>twelve-monkeys demo application</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- Package / Release -->
		<maven-site-plugin.version>3.4</maven-site-plugin.version>
		<maven-resources-plugin.version>2.7</maven-resources-plugin.version>
		<jgitflow-maven-plugin.version>1.0-m5.1</jgitflow-maven-plugin.version>
		<maven-javadoc-plugion>2.10.3</maven-javadoc-plugion>
		<maven-deploy-plugin>2.8.2</maven-deploy-plugin>
		<maven-source-plugin>2.4</maven-source-plugin>
		<!-- Used for Nexus Upload -->
		<wagon-webdav-jackrabbit.version>2.4</wagon-webdav-jackrabbit.version>

		<!--  Frontend -->
		<frontend-maven-plugin.version>1.0</frontend-maven-plugin.version>
		<frontend-maven-plugin.nodeVersion>v6.2.2</frontend-maven-plugin.nodeVersion>
		<frontend-maven-plugin.npmVersion>3.9.5</frontend-maven-plugin.npmVersion>

		<!-- Joda -->
		<joda-time-version>2.8.2</joda-time-version>
		<!-- Jackson / Json -->
		<json-path-assert.version>2.1.0</json-path-assert.version>
		<jackson-mapper-asl.version>1.9.13</jackson-mapper-asl.version>

		<!-- SOAP und XML Mapping -->
		<wsdlRoot>${project.basedir}/src/main/resources/wsdl</wsdlRoot>
		<cxf-codegen-plugin.version>3.1.5</cxf-codegen-plugin.version>
		<cxf-xjc.version>3.0.5</cxf-xjc.version>
		<cxf-xjc-fluent-api.version>3.0</cxf-xjc-fluent-api.version>
		<krasa-jaxb-tools.version>1.4</krasa-jaxb-tools.version>

		<!-- Database-->
		<ojdbc6.version>11.2.0.3.0</ojdbc6.version>

		<!-- asciidoc -->
		<asciidoctor.maven.plugin.version>1.5.3</asciidoctor.maven.plugin.version>
		<asciidoctor-pdf.version>1.5.0-alpha.7</asciidoctor-pdf.version>
		<asciidoctor-diagram.version>1.3.1</asciidoctor-diagram.version>
		<snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
		<asciidoctor-outputDirectory>${project.basedir}/src/main/resources/static/docs</asciidoctor-outputDirectory>

		<!--  JUnit Test Skip  -->
		<unit-tests.skip>false</unit-tests.skip>
		<!--  Integration Test Skip -->
		<integration-tests.skip>true</integration-tests.skip>

		<!-- JaCoCo-->
		<jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
		<argLine>-XX:PermSize=128m -XX:MaxPermSize=512m</argLine>
		<!-- Coveralls -->
		<coveralls-maven-plugin.version>4.2.0</coveralls-maven-plugin.version>

		<assertj.version>1.7.0</assertj.version>
		<mockito.version>1.10.8</mockito.version>
		<rest-assured.version>2.4.0</rest-assured.version>
		<spring-data-rest-hal-browser.version>2.5.2.RELEASE</spring-data-rest-hal-browser.version>
	</properties>


	<dependencies>
		<!-- Issue : SLF4J: Class path contains multiple SLF4J bindings. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>logback-classic</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
				<exclusion>
					<artifactId>log4j-over-slf4j</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-browser</artifactId>
			<version>${spring-data-rest-hal-browser.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- h2 database-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<!--<scope>runtime</scope> used for H2 database console @see WebConfiguration-->
		</dependency>
		<!-- flayway -->
		<!--<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>-->
		<!-- jGitFlow -->
		<dependency>
			<groupId>external.atlassian.jgitflow</groupId>
			<artifactId>jgitflow-maven-plugin</artifactId>
			<version>${jgitflow-maven-plugin.version}</version>
		</dependency>
		<!-- JodaTime -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time-version}</version>
		</dependency>
		<!-- Assertj -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
		</dependency>
		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson-mapper-asl.version}</version>
		</dependency>


		<!-- starter-test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Rest-Assured -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Rest-Docs -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Tests -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<version>${json-path-assert.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<finalName>${project.name}-${project.version}</finalName>
		<!--- PluginManagement -->
		<pluginManagement>
			<plugins>
				<!-- jGitFlow -->
				<plugin>
					<groupId>external.atlassian.jgitflow</groupId>
					<artifactId>jgitflow-maven-plugin</artifactId>
					<version>${jgitflow-maven-plugin.version}</version>
					<configuration>
						<!--Keep maven sub modules in same verion as parent-->
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<pushFeatures>true</pushFeatures>
						<pushReleases>true</pushReleases>
						<suppressFastForward>true</suppressFastForward>
						<scmCommentPrefix>jgf:</scmCommentPrefix>
						<!--enforce line ending-->
						<eol>lf</eol>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin}</version>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugion}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin}</version>
				</plugin>

				<!-- AsciiDoc -->
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>${asciidoctor.maven.plugin.version}</version>
					<configuration>
						<sourceDirectory>${project.basedir}/src/docs/asciidoc</sourceDirectory>
						<baseDir>${project.basedir}/src/docs/asciidoc-resources</baseDir>
						<outputDirectory>${asciidoctor-outputDirectory}</outputDirectory>
						<backend>html</backend>
						<doctype>book</doctype>
						<requires>
							<require>asciidoctor-diagram</require>
						</requires>
						<sourceDocumentName>manual.adoc</sourceDocumentName>
						<attributes>
							<sectnums>true</sectnums>
							<snippets>${snippetsDirectory}</snippets>
							<project-version>${project.version}</project-version>
							<project-name>${project.name}</project-name>
							<project-artifact-name>${project.name}-${project.version}</project-artifact-name>
						</attributes>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctorj-diagram</artifactId>
							<version>${asciidoctor-diagram.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- Builder Helper add Resources-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${project.build.directory}/generated-sources/java/</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>


		<!-- Used for Nexus Upload -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>${wagon-webdav-jackrabbit.version}</version>
			</extension>
		</extensions>

		<!-- Plugins -->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- jGitFlow -->
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>${jgitflow-maven-plugin.version}</version>
				<configuration>
					<!-- see goals wiki page for configuration options -->
				</configuration>
			</plugin>

			<!-- SureFire -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${unit-tests.skip}</skipTests>
					<excludes>
						<exclude>**/*IntegrationTest.*</exclude>
						<exclude>**/*DocumentationIntegration.*</exclude>
					</excludes>
					<includes>
						<include>**/*Documentation.*</include>
					</includes>
				</configuration>
			</plugin>

			<!-- FailSafe -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<skipTests>${integration-tests.skip}</skipTests>
							<includes>
								<include>**/*IntegrationTest.*</include>
								<include>**/*DocumentationIntegration.*</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Asciidoctor Plugin-->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<doctype>book</doctype>
							<sourceDocumentName>manual.adoc</sourceDocumentName>
							<sourceHighlighter>coderay</sourceHighlighter>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>


	<!-- Profiles -->
	<profiles>
		<!-- Apache CXF SOAP / XML Mapping -->
		<profile>
			<id>cxf</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.cxf</groupId>
						<artifactId>cxf-codegen-plugin</artifactId>
						<version>${cxf-codegen-plugin.version}</version>
						<configuration>
							<defaultOptions>
								<extraargs>
									<!-- generate fluent api: withBlaa(). This is very usefull to write test cases -->
									<extraarg>-xjc-Xfluent-api</extraarg>
									<!-- generate boolean getter with isSomething instead of getSomething -->
									<extraarg>-xjc-Xbgi</extraarg>
									<!-- generate constructor with default values set -->
									<extraarg>-xjc-Xdv</extraarg>
								</extraargs>
								<bindingFiles>
									<bindingFile>${project.basedir}/src/main/resources/wsdl/binding.xml</bindingFile>
									<bindingFile>${project.basedir}/src/main/resources/wsdl/enum-binding.xml
									</bindingFile>
								</bindingFiles>
							</defaultOptions>
						</configuration>
						<executions>
							<execution>
								<id>wsdl2java</id>
								<phase>generate-sources</phase>
								<configuration>
									<wsdlOptions>
										<wsdlOption>
											<wsdl>${wsdlRoot}/Tarif_v2_0.wsdl</wsdl>
										</wsdlOption>
									</wsdlOptions>
								</configuration>
								<goals>
									<goal>wsdl2java</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.github.krasa</groupId>
								<artifactId>krasa-jaxb-tools</artifactId>
								<version>${krasa-jaxb-tools.version}</version>
							</dependency>
							<!-- https://mvnrepository.com/artifact/org.apache.cxf.xjcplugins/cxf-xjc-boolean -->
							<dependency>
								<groupId>org.apache.cxf.xjcplugins</groupId>
								<artifactId>cxf-xjc-boolean</artifactId>
								<version>${cxf-xjc.version}</version>
							</dependency>
							<dependency>
								<groupId>org.apache.cxf.xjcplugins</groupId>
								<artifactId>cxf-xjc-dv</artifactId>
								<version>${cxf-xjc.version}</version>
							</dependency>
							<dependency>
								<groupId>org.apache.cxf.xjcplugins</groupId>
								<artifactId>cxf-xjc-ts</artifactId>
								<version>${cxf-xjc.version}</version>
							</dependency>
							<dependency>
								<groupId>org.jvnet.jaxb2_commons</groupId>
								<artifactId>jaxb2-fluent-api</artifactId>
								<version>${cxf-xjc-fluent-api.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Jacoco -->
		<profile>
			<id>jacoco</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin.version}</version>

						<configuration>
							<excludes>
								<exclude>**/ch/helsana/services/**</exclude>
							</excludes>
						</configuration>

						<executions>
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>default-report</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>check-coverage</id>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<!-- Bundle -->
										<rule>
											<element>BUNDLE</element>
											<excludes>
												<exclude>**/*Test*</exclude>
												<exclude>**/*Documentation*</exclude>
											</excludes>
											<limits>
												<limit>
													<counter>COMPLEXITY</counter>
													<value>COVEREDRATIO</value>
													<!-- <minimum>0.60</minimum>-->
												</limit>
											</limits>
										</rule>
										<!-- Package -->
										<rule>
											<element>PACKAGE</element>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<!--<minimum>0.80</minimum>-->
												</limit>
												<limit>
													<counter>CLASS</counter>
													<value>MISSEDCOUNT</value>
													<!--<maximum>0</maximum>-->
												</limit>
											</limits>
										</rule>
										<!-- Class -->
										<rule>
											<element>CLASS</element>
											<excludes>
												<exclude>*Test*</exclude>
											</excludes>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<!-- <minimum>0.50</minimum>-->
												</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>


					<!-- CODE COVERAGE PUBLISHER -->
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<version>${coveralls-maven-plugin.version}</version>
					</plugin>

				</plugins>
			</build>
		</profile>


		<!-- Copy manual -->
		<profile>
			<id>copydocu</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Resources Plugin -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>${maven-resources-plugin.version}</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${asciidoctor-outputDirectory}
									</outputDirectory>
									<resources>
										<resource>
											<directory>
												${project.build.directory}/generated-docs
											</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>buildFrontend</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend-maven-plugin.version}</version>
						<!-- optional -->
						<configuration>
							<workingDirectory>src/main/frontend</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<nodeVersion>${frontend-maven-plugin.nodeVersion}</nodeVersion>
									<npmVersion>${frontend-maven-plugin.npmVersion}</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
							<execution>
								<id>gulp build</id>
								<goals>
									<goal>gulp</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<!-- optional: if not specified, it will run gulp's default
                                    task (and you can remove this whole <configuration> section.) -->
									<arguments>Prod</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  release-dry-run-->
		<profile>
			<id>release-dry-run</id>
			<!--Deploy artifacts to nexus PRE-PROD-->
			<distributionManagement>
				<snapshotRepository>
					<id>snapshots</id>
					<name>Helsana Snapshots auf Alma Entw.</name>
					<url>http://alma-artifact-entw.hel.kko.ch/nexus/content/repositories/snapshots/</url>
				</snapshotRepository>

				<repository>
					<id>releases</id>
					<name>Helsana Releases auf Alma Entw.</name>
					<url>http://alma-artifact-entw.hel.kko.ch/nexus/content/repositories/releases/</url>
				</repository>
			</distributionManagement>

			<!--Perform release without tagging origin/master-->
			<build>
				<plugins>
					<plugin>
						<groupId>external.atlassian.jgitflow</groupId>
						<artifactId>jgitflow-maven-plugin</artifactId>
						<version>${jgitflow-maven-plugin.version}</version>
						<configuration>
							<!--do not push release branch -->
							<pushReleases>false</pushReleases>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- release -->
		<profile>
			<id>release</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<!-- Distribution -->
			<distributionManagement>
				<repository>
					<id>releases</id>
					<url>dav:http://alma-artifact/nexus/content/repositories/releases/</url>
				</repository>
				<snapshotRepository>
					<uniqueVersion>false</uniqueVersion>
					<id>snapshots</id>
					<url>dav:http://alma-artifact/nexus/content/repositories/snapshots/</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>

	</profiles>
</project>
